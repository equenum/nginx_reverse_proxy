# directives: instructions that tell NGINX what to do (key-value pair congifurations).
# context: the context in which a directive is placed determines its meaning and how it is applied.
# blocks: collections of directives that are grouped together (blocks or code with curly blaces).
# server blocks: a block of directives that define the configuration for a specific virtual server. 

http {

    # MIME types describe the media type of content being served.
    # we can use default 
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # defines a group of servers. servers can listen on different ports.
    upstream mediaservice {
        server 127.0.0.1:5000;
        server 127.0.0.1:6000;
    }

    # as well as define custom ones
    # types {
    #     text/css        css;
    #     text/html       html;
    # }

    # server context
    server {
        listen 8080;
        root /usr/share/nginx/html; # file path to static assets

        # allows to route request to correct location within the file system
        location /home {
            root /usr/share/nginx/html; # root automatically appends /home to the file path
        }

        # location /about {
        #     alias /usr/share/nginx/html/home; # alias takes the path as it is, no apending the route
        # }

        location /about {
            root /usr/share/nginx/html;
            try_files /about/about.html /index.html =404;
        }

        location /media {
            # sets the protocol and address of a proxied server.
            # applies round robin load balancing algorithm by default
            proxy_pass http://mediaservice/api/public/media/stream/;
        }
    }

    include /etc/nginx/conf.d/*.conf;
}

# has do be defined in order for the configuration to be valis.
# if no events are applicable, leave empty
events {}
